name: Deploy Vite App

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        envs: PAT
        script: |
          # Set environment variable
          PAT=${{ secrets.PAT }}
          
          # Navigate to application directory
          cd /var/www/html || { echo "Failed to navigate to app directory"; exit 1; }
          echo "Current directory: $(pwd)"
          
          # Configure Git to allow operations in this directory
          git config --global --add safe.directory /var/www/html || { echo "Warning: Failed to set safe.directory"; }
          
          # Check if it's a git repository
          if [ ! -d ".git" ]; then
            echo "Initializing git repository..."
            git init || { echo "Failed to initialize git repository"; exit 1; }
            echo "Renaming default branch to main..."
            git branch -m main || { echo "Warning: Failed to rename branch"; }
          fi
          
          # Set or update the remote URL
          echo "Configuring remote repository..."
          if git remote | grep -q "origin"; then
            # Remote exists, update URL
            git remote set-url origin "https://${PAT}@github.com/perrythepearai/main.git" || { echo "Failed to update remote URL"; exit 1; }
          else
            # Remote doesn't exist, add it
            git remote add origin "https://${PAT}@github.com/perrythepearai/main.git" || { echo "Failed to add remote"; exit 1; }
          fi
          
          # Verify remote
          echo "Verifying remote configuration..."
          git remote -v
          
          # Pull latest code from repository
          echo "Pulling latest code..."
          # Force fetch and reset to match remote exactly
          git fetch origin main || { echo "Failed to fetch code"; exit 1; }
          git reset --hard origin/main || { echo "Failed to reset to latest code"; exit 1; }
          
          # Install dependencies
          echo "Installing dependencies..."
          npm ci || { echo "Failed to install dependencies"; exit 1; }
          
          # Build the application
          echo "Building the Vite application..."
          NODE_OPTIONS="--max-old-space-size=2048" npm run build || { echo "Failed to build application but continuing..."; }
          
          # Check where Vite actually built the files
          echo "Checking for build output..."
          if [ -d "../dist" ]; then
            echo "Found build output in ../dist, copying to ./dist"
            mkdir -p dist
            rm -rf dist/*
            cp -r ../dist/* dist/
            echo "Files copied from ../dist to ./dist"
          elif [ -d "src/dist" ]; then
            echo "Found build output in src/dist, copying to ./dist"
            mkdir -p dist
            rm -rf dist/*
            cp -r src/dist/* dist/
            echo "Files copied from src/dist to ./dist"
          else
            echo "Searching for dist directory..."
            find . -name "dist" -type d | grep -v "node_modules"
          fi
          
          # Backup current version (if exists)
          if [ -d "dist" ]; then
            echo "Creating backup of dist folder..."
            mkdir -p backup
            timestamp=$(date +%Y%m%d%H%M%S)
            cp -r dist backup/dist-$timestamp
            echo "Backup created at backup/dist-$timestamp"
          fi
          
          # Ensure permissions are correct for web server
          echo "Setting permissions..."
          chmod -R 755 dist
          
          echo "Deployment completed successfully"